version: '3.8'

services:
  #
  # Micro service REST API: ecb-exchange-rates-rest-api
  # Development
  ecb-exchange-rates-rest-api-dev:
    restart: unless-stopped
    image: ecb-exchange-rates-rest-api-dev:1.0.0
    container_name: ecb-exchange-rates-rest-api-dev
    build:
      context: ./
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./:/ecb-exchange-rates-rest-api/src/app
      - /ecb-exchange-rates-rest-api/src/app/node_modules
    # Run in Debug Mode: npm run start:debug --> Don't forget to start your vscode debugger!
    command: npm run start:dev
    depends_on:
      - postgresql
    environment:
      NODE_ENV: development
    env_file:
      - ./.env
    ports:
      - 3000:3000
  # Production
  ecb-exchange-rates-rest-api-prod:
    restart: unless-stopped
    image: ecb-exchange-rates-rest-api-prod:1.0.0
    container_name: ecb-exchange-rates-rest-api-prod
    build:
      context: ./
      dockerfile: Dockerfile
      target: production
    volumes:
      - ./:/ecb-exchange-rates-rest-api/src/app
      - /ecb-exchange-rates-rest-api/src/app/node_modules
    # Run in Debug Mode: npm run start:debug --> Don't forget to start your vscode debugger!
    command: npm run start:prod
    depends_on:
      - postgresql
    environment:
      NODE_ENV: production
    env_file:
      - ./.env
    ports:
      - 3000:3000

  # Database engine: PostgreSQL
  postgresql:
    container_name: postgresql
    image: postgres:latest
    restart: always
    volumes:
      - ~/development/database/postgresql/data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'postgres'
      PGDATA: /var/lib/postgresql/data
    ports:
      - '5432:5432'
